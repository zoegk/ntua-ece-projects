LXI B,0032H ;used for 0.05s delay
MVI A,10H ;4 left-most 7-segment displays need to be empty
STA 0B02H
STA 0B03H
STA 0B04H
STA 0B05H

START:
	MVI A,0DH ;interrupt mask to allow rst 6.5
	SIM
	EI ;enable interrupts

WAIT: JMP WAIT

INTR_ROUTINE:
	POP H ;reduce stack
	MVI A,00H
	STA 3000H
	MVI D,3CH ;60 seconds
	MVI E,00H ;E will count up to 5 to reverse lights every 5*0.05 = 0.25s
	MVI H,00H ;H will count up to 4 light reverses to reduce D by 1 (1s)
 	MVI L,FFH ;L will contain current light condition (00 or FF)
	EI ;enable interrupts to allow timer renewing

LIGHTS:
	INR E
	MOV A,E
	CPI 05H
	JNZ SKIP
	
	MOV A,L
	CMA
	MOV L,A
	STA 3000H
	INR H ;increase H every 5 loops
	MVI E,00H
	MOV A,H
	CPI 04H
	JNZ SKIP
      
	DCR D ;1 second has passed
	MVI H,00H
	MOV A,D
	CPI 60H ;60 seconds have passed if D is 60
	JZ START

SKIP:
	CALL DELB
	PUSH H ;store HL
	MOV A,D ;seconds remaining
	MVI B,00H

	;bring number in decimal form (A contains ones and B contains tens)
	SUB10:
	CPI 0AH
	JC FINISH
	SUI 0AH
	INR B
	JMP SUB10
	
FINISH:
	STA 0B00H ;print ones in right-most 7-segment display
	
	MOV A,B
	STA 0B01H ;print tens in second 7-segment display
	
	PUSH D ;store DE
	LXI D,0B00H ;used for STDM
	CALL STDM
	CALL DCD
	MOV D,B
	MOV E,C ;restore D and E
	LXI B,0032H ;used for 0.05s delay
	POP D ;restore DE
	POP H ;restore HL
	JMP LIGHTS

END